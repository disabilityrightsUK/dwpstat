% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/table.R
\name{dwp_get_data}
\alias{dwp_get_data}
\title{Submit and receive table queries}
\usage{
dwp_get_data(database, measures, column, row = NULL, wafer = NULL, ...)
}
\arguments{
\item{database}{The ID of the database to query, as a single string.
Must be specified.}

\item{measures}{A character vector of fields to return measures for. Also
accepts a string if one measure is being queried. Must be specified.}

\item{column}{A character vector of fields for the column dimension. Also
accepts a string if one measure is being queried. Must be specified.}

\item{row}{A character vector of fields for the row dimension. Also
accepts a string if one measure is being queried. Defaults to \code{NULL}.}

\item{wafer}{A character vector of fields for the wafter dimension. Also
accepts a string if one measure is being queried. Defaults to \code{NULL}.}

\item{...}{For recode vector. Not in use.}
}
\value{
A list of six levels:

\enumerate{
\item{\code{query}} The query submitted to the API, including the database
used, the measures requested, the dimensions (row, column, wafer), and the
record request.

\item{\code{database}} Details on the database queried. Contains two vectors:
\itemize{
\item{\code{id}} The ID of this dataset
\item{\code{annotationKeys}} An array of keys to annotations for the dataset.
If there are annotations available, their descriptions will be in the
\code{annotationMap} object.
}

\item{\code{fields}} Details of the fields being queried.
\itemize{
\item{\code{uri}} Field ID, or Open Data ID, as returned by \code{\link[=dwp_schema]{dwp_schema()}}.
\item{\code{label}} The display name for given measure, as displayed in
\href{https://stat-xplore.dwp.gov.uk/}{Stat-Xplore}.
\item{\code{items}} An array with the field values returned for each field:
\itemize{
\item{\code{type}} The field type. The \code{RecodeItem}, if applicable.
\item{\code{labels}} Display name(s) for the given field item. If \code{recodes}
are used, this will contain labels for each created field value.
\item{\code{annotationKeys}} An array of keys to annotations for the dataset.
If there are annotations available, their descriptions will be in the
\code{annotationMap} object.
\item{\code{uris}} Field ID, or Open Data ID, as returned by \code{\link[=dwp_schema]{dwp_schema()}}.
}
\item{\code{annotationKeys}} An array of keys to annotations for the
dataset. If there are annotations available, their descriptions will be
in the \code{annotationMap} object.
}

\item{\code{measures}} An array containing all the measures (summation options)
returned for the query. For each measure, the API returns:
\itemize{
\item{\code{uri}} Field ID, or Open Data ID, as returned by \code{\link[=dwp_schema]{dwp_schema()}}.
\item{\code{label}} The display name for the given measure, as displayed in
\href{https://stat-xplore.dwp.gov.uk/}{Stat-Xplore}.
}

\item{\code{cubes}} An array containing the API query results. There will be
one item in the array for each requested measure. Each item specifies a
measure, with the values for each cell in the cube for the given measure.

\item{\code{annotationMap}} The annotations applicable to this query.
If there are annotations for the dataset or its fields,
the annotation keys and descriptions will be returned here.

}
}
\description{
Table queries contain the actual data from the DWP database. Due to the
complexity of the API data being returned, and to preserve the flexibility
of the API query, the API return is not processed into a data frame but is
preserved as a list.
}
\details{
Returns a list of 6 levels. The descriptions of what each level
contains are adapted from the
\href{https://stat-xplore.dwp.gov.uk/webapi/online-help/Open-Data-API-Table.html}{API documentation}.
}
\examples{
\dontrun{
# A complex query
x <- dwp_get_data(database = "str:database:ESA_Caseload",
                  measures = "str:count:ESA_Caseload:V_F_ESA",
                  column = c("str:field:ESA_Caseload:V_F_ESA:CCSEX",
                             "str:field:ESA_Caseload:V_F_ESA:CTDURTN"),
                  row = "str:field:ESA_Caseload:V_F_ESA:ICDGP",
                  wafer = "str:field:ESA_Caseload:V_F_ESA:IB_MIG")

# A more straightforward query returning the number of PIP recipients in
# the most recent month, split by sex
z <- dwp_get_data(database = "str:database:PIP_Monthly",
                    measures = "str:count:PIP_Monthly:V_F_PIP_MONTHLY",
                    column = "str:field:PIP_Monthly:V_F_PIP_MONTHLY:SEX")
}
}
